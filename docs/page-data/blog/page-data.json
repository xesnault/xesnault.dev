{"componentChunkName":"component---src-pages-blog-js","path":"/blog/","result":{"data":{"allMarkdownRemark":{"nodes":[{"html":"<h1>Quick Sort</h1>\n<p>To explain the Quick Sort algorithm, let's take a simple example:  </p>\n<p>We have an array of number (integer) in random order, but we want them in ascending order, so we have to sort them, here comes the Quick Sort algorithm.  </p>\n<p><em>Note: The range of the numbers and the length of the array have no importance for the algorithm itself, but it will have a performance cost.</em></p>\n<h2>Algorithm</h2>\n<p>Select a number, called \"pivot\", chosen arbritrary from the array itself, put all the numbers lower than the pivot before it and all the numbers greater after it, split the current partition into 2 new partitions (the ones before and after the pivot), and repeat the procedure for each partition until there is no partition left (when the array length is 1).</p>\n<p>The Quick Sort algorithm steps are:</p>\n<ul>\n<li>Select a pivot value from the partition and move it at the end of the partition (P, the pivot value).</li>\n<li>Remember the start index of the current partition (S, the start index).</li>\n<li>for each element (E), if E is lower or equal than P, then swap value E with the value at index S, then increment S.</li>\n<li>Use the pivot P to divide the partition into 2 new partitions.</li>\n<li>Repeat the algorithm for the 2 newly created partitions until there is no partition left.</li>\n</ul>\n<h2>Implementation</h2>\n<h4>Go</h4>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">Swap</span><span class=\"token punctuation\">(</span>partition <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> i <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> j <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    partition<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> partition<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> partition<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> partition<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">QuickSort</span><span class=\"token punctuation\">(</span>partition <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">Swap</span><span class=\"token punctuation\">(</span>partition<span class=\"token punctuation\">,</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>partition<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>partition<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Select the pivot from the middle (arbitrary) of the partition and swap it with the last element</span>\n\n    startIndex <span class=\"token operator\">:=</span> <span class=\"token number\">0</span>\n    pivot <span class=\"token operator\">:=</span> partition<span class=\"token punctuation\">[</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span>partition<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// Since we already swapped the pivot, we get the value directly from the end of the partition</span>\n\n    <span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> startIndex<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>partition<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> partition<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> pivot <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">Swap</span><span class=\"token punctuation\">(</span>partition<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> startIndex<span class=\"token punctuation\">)</span>\n            startIndex<span class=\"token operator\">++</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// startIndex now point at the first element of the values greater or equal than the pivot</span>\n    <span class=\"token keyword\">if</span> startIndex <span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">QuickSort</span><span class=\"token punctuation\">(</span>partition<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span>startIndex <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>partition<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> startIndex <span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">QuickSort</span><span class=\"token punctuation\">(</span>partition<span class=\"token punctuation\">[</span>startIndex<span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>Performance (speed)</h2>\n<p>Average: O(n*log(n))<br>\nBest case: O(n*log(n))<br>\nWorst case: O(nÂ²)</p>\n<h2>Sources</h2>\n<p><a href=\"https://fr.wikipedia.org/wiki/Tri_rapide\">https://fr.wikipedia.org/wiki/Tri_rapide</a> (fr)<br>\n<a href=\"https://en.wikipedia.org/wiki/Quicksort\">https://en.wikipedia.org/wiki/Quicksort</a> (en)<br>\nMy experience.</p>","frontmatter":{"date":"February 1st, 2021","title":"Quick Sort algorithm","description":"Description and implementation of the Quick Sort algorithm"},"fields":{"slug":"/posts/quick-sort-algorithm/"}},{"html":"<h1>12 Projects in 12 months</h1>\n<p>I'm starting today my 12 projects in 12 months challenge, we all have different reasons and goals, here are mine.</p>\n<h2>Context</h2>\n<p>I really like coding, especially with C++ and I started learning typescript 3 years ago. I'm fine with both desktop and web apps even if I really prefer desktop (and native) software, but I also want to improve my web skills.<br>\nI don't care if a solution already exists, I don't care about reinventing the wheel, I like making my own version of software I use and it's a good way to learn how to make this kind of stuff.</p>\n<h2>Goals</h2>\n<ul>\n<li>Learning</li>\n<li>Share my work</li>\n<li>Increase my presence on the web</li>\n<li>It will add projects to my portfolio</li>\n<li>Making money (This is a bonus)</li>\n</ul>\n<h2>The projects</h2>\n<p>I will work on really different projects, from web to desktop and even terminal based software. They will be open source except for web apps and I plan to share when something is finished. They don't have to be difficult, but just well executed and idealy taking about 2-3 weeks.  </p>\n<p>This is a small post because I don't know what to write, but it's a way to commit myself to this challenge and maybe it will inspire someone in the future.</p>","frontmatter":{"date":"January 2nd, 2022","title":"12 projects in 12 months","description":"Making 12 projects in 12 months"},"fields":{"slug":"/posts/12projects12months/"}}]}},"pageContext":{}},"staticQueryHashes":["3649515864"]}